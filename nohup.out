Traceback (most recent call last):
  File "schedDo.py", line 9, in <module>
    import getMorning
  File "/home/MorningNews/getMorning.py", line 12, in <module>
    from sendEmail import send_email
  File "/home/MorningNews/sendEmail.py", line 17, in <module>
    datefmt='%Y-%m-%d%I:%M:%S %p')
  File "/usr/local/python3/lib/python3.6/logging/__init__.py", line 1776, in basicConfig
    h = FileHandler(filename, mode)
  File "/usr/local/python3/lib/python3.6/logging/__init__.py", line 1025, in __init__
    StreamHandler.__init__(self, self._open())
  File "/usr/local/python3/lib/python3.6/logging/__init__.py", line 1054, in _open
    return open(self.baseFilename, self.mode, encoding=self.encoding)
FileNotFoundError: [Errno 2] No such file or directory: '/LOG/sendEmail.log'
  File "schedDo.py", line 43
    if counter == 12:
     ^
IndentationError: expected an indented block
Traceback (most recent call last):
  File "schedDo.py", line 9, in <module>
    import getMorning
  File "/home/MorningNews/getMorning.py", line 18, in <module>
    logging_email.basicConfig(filename='LOG/'+__name__+'.log',
AttributeError: 'RootLogger' object has no attribute 'basicConfig'
Traceback (most recent call last):
  File "schedDo.py", line 18, in <module>
    filemode='a')
  File "/usr/local/python3/lib/python3.6/logging/__init__.py", line 1776, in basicConfig
    h = FileHandler(filename, mode)
  File "/usr/local/python3/lib/python3.6/logging/__init__.py", line 1025, in __init__
    StreamHandler.__init__(self, self._open())
  File "/usr/local/python3/lib/python3.6/logging/__init__.py", line 1054, in _open
    return open(self.baseFilename, self.mode, encoding=self.encoding)
FileNotFoundError: [Errno 2] No such file or directory: '/home/MorningNews/LOG/logging.log'
Traceback (most recent call last):
  File "/usr/local/python3/lib/python3.6/urllib/request.py", line 1318, in do_open
    encode_chunked=req.has_header('Transfer-encoding'))
  File "/usr/local/python3/lib/python3.6/http/client.py", line 1239, in request
    self._send_request(method, url, body, headers, encode_chunked)
  File "/usr/local/python3/lib/python3.6/http/client.py", line 1285, in _send_request
    self.endheaders(body, encode_chunked=encode_chunked)
  File "/usr/local/python3/lib/python3.6/http/client.py", line 1234, in endheaders
    self._send_output(message_body, encode_chunked=encode_chunked)
  File "/usr/local/python3/lib/python3.6/http/client.py", line 1026, in _send_output
    self.send(msg)
  File "/usr/local/python3/lib/python3.6/http/client.py", line 964, in send
    self.connect()
  File "/usr/local/python3/lib/python3.6/http/client.py", line 936, in connect
    (self.host,self.port), self.timeout, self.source_address)
  File "/usr/local/python3/lib/python3.6/socket.py", line 704, in create_connection
    for res in getaddrinfo(host, port, 0, SOCK_STREAM):
  File "/usr/local/python3/lib/python3.6/socket.py", line 743, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -5] No address associated with hostname

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "schedDo.py", line 61, in <module>
    main()
  File "schedDo.py", line 28, in main
    scd.run()
  File "/usr/local/python3/lib/python3.6/sched.py", line 154, in run
    action(*argument, **kwargs)
  File "schedDo.py", line 50, in circle_catch
    if getMorning.get_morning():
  File "/home/MorningNews/getMorning.py", line 36, in get_morning
    web_html = get_html(main_web)
  File "/home/MorningNews/getMorning.py", line 61, in get_html
    page = request.urlopen(url)
  File "/usr/local/python3/lib/python3.6/urllib/request.py", line 223, in urlopen
    return opener.open(url, data, timeout)
  File "/usr/local/python3/lib/python3.6/urllib/request.py", line 526, in open
    response = self._open(req, data)
  File "/usr/local/python3/lib/python3.6/urllib/request.py", line 544, in _open
    '_open', req)
  File "/usr/local/python3/lib/python3.6/urllib/request.py", line 504, in _call_chain
    result = func(*args)
  File "/usr/local/python3/lib/python3.6/urllib/request.py", line 1346, in http_open
    return self.do_open(http.client.HTTPConnection, req)
  File "/usr/local/python3/lib/python3.6/urllib/request.py", line 1320, in do_open
    raise URLError(err)
urllib.error.URLError: <urlopen error [Errno -5] No address associated with hostname>
Traceback (most recent call last):
  File "schedDo.py", line 9, in <module>
    import getMorning
  File "/home/MorningNews/getMorning.py", line 9, in <module>
    import html
ImportError: No module named html
Traceback (most recent call last):
  File "/root/anaconda3/lib/python3.6/urllib/request.py", line 1318, in do_open
    encode_chunked=req.has_header('Transfer-encoding'))
  File "/root/anaconda3/lib/python3.6/http/client.py", line 1239, in request
    self._send_request(method, url, body, headers, encode_chunked)
  File "/root/anaconda3/lib/python3.6/http/client.py", line 1285, in _send_request
    self.endheaders(body, encode_chunked=encode_chunked)
  File "/root/anaconda3/lib/python3.6/http/client.py", line 1234, in endheaders
    self._send_output(message_body, encode_chunked=encode_chunked)
  File "/root/anaconda3/lib/python3.6/http/client.py", line 1026, in _send_output
    self.send(msg)
  File "/root/anaconda3/lib/python3.6/http/client.py", line 964, in send
    self.connect()
  File "/root/anaconda3/lib/python3.6/http/client.py", line 936, in connect
    (self.host,self.port), self.timeout, self.source_address)
  File "/root/anaconda3/lib/python3.6/socket.py", line 704, in create_connection
    for res in getaddrinfo(host, port, 0, SOCK_STREAM):
  File "/root/anaconda3/lib/python3.6/socket.py", line 745, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno -5] No address associated with hostname

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "schedDo.py", line 61, in <module>
    main()
  File "schedDo.py", line 28, in main
    scd.run()
  File "/root/anaconda3/lib/python3.6/sched.py", line 154, in run
    action(*argument, **kwargs)
  File "schedDo.py", line 43, in echo_test_msg
    circle_catch()
  File "schedDo.py", line 50, in circle_catch
    if getMorning.get_morning():
  File "/home/MorningNews/getMorning.py", line 36, in get_morning
    web_html = get_html(main_web)
  File "/home/MorningNews/getMorning.py", line 61, in get_html
    page = request.urlopen(url)
  File "/root/anaconda3/lib/python3.6/urllib/request.py", line 223, in urlopen
    return opener.open(url, data, timeout)
  File "/root/anaconda3/lib/python3.6/urllib/request.py", line 526, in open
    response = self._open(req, data)
  File "/root/anaconda3/lib/python3.6/urllib/request.py", line 544, in _open
    '_open', req)
  File "/root/anaconda3/lib/python3.6/urllib/request.py", line 504, in _call_chain
    result = func(*args)
  File "/root/anaconda3/lib/python3.6/urllib/request.py", line 1346, in http_open
    return self.do_open(http.client.HTTPConnection, req)
  File "/root/anaconda3/lib/python3.6/urllib/request.py", line 1320, in do_open
    raise URLError(err)
urllib.error.URLError: <urlopen error [Errno -5] No address associated with hostname>
Traceback (most recent call last):
  File "schedDo.py", line 61, in <module>
    main()
  File "schedDo.py", line 28, in main
    scd.run()
  File "/root/anaconda3/lib/python3.6/sched.py", line 154, in run
    action(*argument, **kwargs)
  File "schedDo.py", line 43, in echo_test_msg
    circle_catch()
  File "schedDo.py", line 50, in circle_catch
    if getMorning.get_morning():
  File "/home/MorningNews/getMorning.py", line 45, in get_morning
    em.do_send()
  File "/home/MorningNews/sendEmail.py", line 46, in do_send
    smtp=smtplib.SMTP_SSL("smtp.leiqblog.top", 25)
  File "/root/anaconda3/lib/python3.6/smtplib.py", line 1031, in __init__
    source_address)
  File "/root/anaconda3/lib/python3.6/smtplib.py", line 251, in __init__
    (code, msg) = self.connect(host, port)
  File "/root/anaconda3/lib/python3.6/smtplib.py", line 336, in connect
    self.sock = self._get_socket(host, port, self.timeout)
  File "/root/anaconda3/lib/python3.6/smtplib.py", line 1039, in _get_socket
    server_hostname=self._host)
  File "/root/anaconda3/lib/python3.6/ssl.py", line 407, in wrap_socket
    _context=self, _session=session)
  File "/root/anaconda3/lib/python3.6/ssl.py", line 814, in __init__
    self.do_handshake()
  File "/root/anaconda3/lib/python3.6/ssl.py", line 1068, in do_handshake
    self._sslobj.do_handshake()
  File "/root/anaconda3/lib/python3.6/ssl.py", line 689, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLError: [SSL: UNKNOWN_PROTOCOL] unknown protocol (_ssl.c:833)
Traceback (most recent call last):
  File "schedDo.py", line 61, in <module>
    main()
  File "schedDo.py", line 28, in main
    scd.run()
  File "/root/anaconda3/lib/python3.6/sched.py", line 154, in run
    action(*argument, **kwargs)
  File "schedDo.py", line 43, in echo_test_msg
    circle_catch()
  File "schedDo.py", line 50, in circle_catch
    if getMorning.get_morning():
  File "/home/MorningNews/getMorning.py", line 45, in get_morning
    em.do_send()
  File "/home/MorningNews/sendEmail.py", line 46, in do_send
    smtp=smtplib.SMTP_SSL("smtp.leiqblog.top", 25)
  File "/root/anaconda3/lib/python3.6/smtplib.py", line 1031, in __init__
    source_address)
  File "/root/anaconda3/lib/python3.6/smtplib.py", line 251, in __init__
    (code, msg) = self.connect(host, port)
  File "/root/anaconda3/lib/python3.6/smtplib.py", line 336, in connect
    self.sock = self._get_socket(host, port, self.timeout)
  File "/root/anaconda3/lib/python3.6/smtplib.py", line 1039, in _get_socket
    server_hostname=self._host)
  File "/root/anaconda3/lib/python3.6/ssl.py", line 407, in wrap_socket
    _context=self, _session=session)
  File "/root/anaconda3/lib/python3.6/ssl.py", line 814, in __init__
    self.do_handshake()
  File "/root/anaconda3/lib/python3.6/ssl.py", line 1068, in do_handshake
    self._sslobj.do_handshake()
  File "/root/anaconda3/lib/python3.6/ssl.py", line 689, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLError: [SSL: UNKNOWN_PROTOCOL] unknown protocol (_ssl.c:833)
Traceback (most recent call last):
  File "schedDo.py", line 61, in <module>
    main()
  File "schedDo.py", line 28, in main
    scd.run()
  File "/root/anaconda3/lib/python3.6/sched.py", line 154, in run
    action(*argument, **kwargs)
  File "schedDo.py", line 43, in echo_test_msg
    circle_catch()
  File "schedDo.py", line 50, in circle_catch
    if getMorning.get_morning():
  File "/home/MorningNews/getMorning.py", line 45, in get_morning
    em.do_send()
  File "/home/MorningNews/sendEmail.py", line 46, in do_send
    smtp=smtplib.SMTP_SSL("smtp.leiqblog.top", 25)
  File "/root/anaconda3/lib/python3.6/smtplib.py", line 1031, in __init__
    source_address)
  File "/root/anaconda3/lib/python3.6/smtplib.py", line 251, in __init__
    (code, msg) = self.connect(host, port)
  File "/root/anaconda3/lib/python3.6/smtplib.py", line 336, in connect
    self.sock = self._get_socket(host, port, self.timeout)
  File "/root/anaconda3/lib/python3.6/smtplib.py", line 1039, in _get_socket
    server_hostname=self._host)
  File "/root/anaconda3/lib/python3.6/ssl.py", line 407, in wrap_socket
    _context=self, _session=session)
  File "/root/anaconda3/lib/python3.6/ssl.py", line 814, in __init__
    self.do_handshake()
  File "/root/anaconda3/lib/python3.6/ssl.py", line 1068, in do_handshake
    self._sslobj.do_handshake()
  File "/root/anaconda3/lib/python3.6/ssl.py", line 689, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLError: [SSL: UNKNOWN_PROTOCOL] unknown protocol (_ssl.c:833)
Traceback (most recent call last):
  File "schedDo.py", line 9, in <module>
    import getMorning
  File "/home/MorningNews/getMorning.py", line 12, in <module>
    from sendEmail import send_email
  File "/home/MorningNews/sendEmail.py", line 47
    smtp.connect("smtp.leiqblog.top", 25)
                                        ^
TabError: inconsistent use of tabs and spaces in indentation
Traceback (most recent call last):
  File "schedDo.py", line 61, in <module>
    main()
  File "schedDo.py", line 28, in main
    scd.run()
  File "/root/anaconda3/lib/python3.6/sched.py", line 154, in run
    action(*argument, **kwargs)
  File "schedDo.py", line 43, in echo_test_msg
    circle_catch()
  File "schedDo.py", line 50, in circle_catch
    if getMorning.get_morning():
  File "/home/MorningNews/getMorning.py", line 45, in get_morning
    em.do_send()
  File "/home/MorningNews/sendEmail.py", line 51, in do_send
    logging.info("发件人：" + message['From'] + "收件人：" + message['To'])
TypeError: must be str, not Header
Traceback (most recent call last):
  File "schedDo.py", line 9, in <module>
    import getMorning
  File "/home/MorningNews/getMorning.py", line 12, in <module>
    from sendEmail import send_email
  File "/home/MorningNews/sendEmail.py", line 44
    print message.as_string()
                            ^
TabError: inconsistent use of tabs and spaces in indentation
Traceback (most recent call last):
  File "schedDo.py", line 9, in <module>
    import getMorning
  File "/home/MorningNews/getMorning.py", line 12, in <module>
    from sendEmail import send_email
  File "/home/MorningNews/sendEmail.py", line 44
    print message.as_string()
                ^
SyntaxError: invalid syntax
Content-Type: text/html; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: base64
From: =?utf-8?b?5bCP6IOh5a2QSGFzb0A/Pz8=?=
To: =?utf-8?b?56We56eY5Lq6QD8/Pw==?=
Subject: =?utf-8?b?5rOh6Z2i5pep5oqlfOefpeS5juWbnuW6lOWkp+inhOaooeijgeWRmOezu+iwo+iogOOAgeWVhuWutuS4vuaKpeaLvOWkmuWkmua2ieWrjOS6jOa4heOAgemYv+mHjOWwhuaIkOeri+acrOWcsOeUn+a0u+eglOeptumZouOAgeS8oOS4reWbveWcqOaOqOi/m+S4i+iwg+e+juWbveeUn+S6p+axvei9puWFs+eojg==?=

CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZW50cnkiPgogICAgICAgICAgICAgICAg
ICAgICAgICA8ZGl2IGNsYXNzPSJlbnRyeS1oZWFkIj4KICAgICAgICAgICAgICAgICAgICAgICAg
ICAgIDxoMSBjbGFzcz0iZW50cnktdGl0bGUiPuazoemdouaXqeaKpXznn6XkuY7lm57lupTlpKfo
p4TmqKHoo4HlkZjns7vosKPoqIDjgIHllYblrrbkuL7miqXmi7zlpJrlpJrmtonlq4zkuozmuIXj
gIHpmL/ph4zlsIbmiJDnq4vmnKzlnLDnlJ/mtLvnoJTnqbbpmaLjgIHkvKDkuK3lm73lnKjmjqjo
v5vkuIvosIPnvo7lm73nlJ/kuqfmsb3ovablhbPnqI48L2gxPgogICAgICAgICAgICAgICAgICAg
ICAgICAgICAgPGRpdiBjbGFzcz0iZW50cnktaW5mbyI+CiAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICDms6HpnaLlsI/plYcKICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZG90Ij7igKI8L3NwYW4+
CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+NeWwj+aXtuWJjTwvc3Bhbj4K
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZG90Ij7igKI8L3Nw
YW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg5pep5oqlICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bh
biBjbGFzcz0iZG90Ij7igKI8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgIDxzcGFuPumYheivuyA1NDE8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAg
ICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZW50cnktY29udGVudCBjbGVh
cmZpeCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDE+56eR5oqA5aS05p2hPC9oMT4K
PGgyPjHjgIHnn6XkuY7lm57lupTigJzoo4HlkZgzMDDkurrigJ3vvJrlpKfop4TmqKHoo4HlkZjn
s7vosKPoqIDlpJrlspfkvY3mraPlub/ms5vmi5vkuro8L2gyPgo8cD7pkojlr7nljbPlsIboo4Hl
kZgzMDDkurrnmoTniIbmlpnvvIznn6XkuY7mlrnpnaLlm57lupTnp7DvvIzlpKfop4TmqKHoo4Hl
kZjmmK/osKPkvKDjgILnn6XkuY7mlrnpnaLooajnpLrvvIwyMDE45bm055So5oi35aKe6ZW/6LaF
MTAwJe+8jOebruWJjeazqOWGjOeUqOaIt+eqgeegtDIuMuS6v+OAguS7iuW5tDjmnIg45pel77yM
55+l5LmO5Y+R5biD5rW355uQ6K6h5YiS77yM5Yib5aeL5Lq65ZGo5rqQ6YCa6L+H6KeG6aKR5a6j
5biD55+l5LmO5bey57uP5a6M5oiQMi435Lq/576O5YWDRei9ruiejei1hO+8jOWwhuWKoOmAn+WF
qOawkeefpeivhuWGheWuueW5s+WPsOeahOW7uuiuvu+8jOWKoOWkp+WcqCA8c3BhbiBjbGFzcz0i
d3Bjb21fa2V5d29yZF9saW5rIj5BSTwvc3Bhbj4g5oqA5pyv44CB5YaF5a6555Sf5oCB44CB55+l
6K+G5pyN5Yqh5ZKM5ZWG5Lia5YyW562J5aSa5Liq57u05bqm55qE5oqV5YWl77yM55uu5YmN55yL
5piv6ZyA6KaB5aSn6YeP55qE5Lq65ZGY55qE77yM5bm25LiN5Lya6L+b6KGM5aSn6KeE5qih6KOB
5ZGY44CCPC9wPgo8aDI+MuOAgeW+ruS/oeaUr+S7mOKAnOaUtuasvuacieekvOKAneWNs+WwhuS4
iue6vzwvaDI+CjxwPuW+ruS/oeaUr+S7mOKAnOaUtuasvuacieekvOKAneWKn+iDveWNs+WwhuS4
iue6v+OAguWVhuaIt+mAmui/h+W+ruS/oeaUr+S7mOWumOaWueaUtuasvueggeaUtuasvuWwhuWP
r+iOt+W+l+enr+WIhu+8jOW5tuiDveWcqOKAnOaUtuasvuacieekvOKAneWFkeaNouWkmuenjeS8
mOi0qOOAgeS4quaAp+WMlueahOS6p+WTgeacjeWKoeWSjOadg+ebiu+8jOWVhuaIt+WPqumcgOS9
v+eUqOW+ruS/oeaUr+S7mOWumOaWuemCruWvhOeahOaUtuasvueggei/m+ihjOaUtuasvu+8jOaU
tuasvuavj+a7oTHlhYPljbPlj6/ojrflvpcx5Liq56ev5YiG77yM5Zyo4oCc5pS25qy+5pyJ56S8
4oCd5Lit5bCx6IO95L2/55So57Sv6K6h56ev5YiG5YWR5o2i5YWN6LS55o+Q546w6aKd5bqm77yM
5bm25Y+v5Zyo4oCc5pS25qy+5bCP6LSm5pys4oCd5bCP56iL5bqP5Lit5p+l55yL6K+m5oOF5bm2
5L2/55So44CCPC9wPgo8cD48bm9zY3JpcHQ+PC9ub3NjcmlwdD48L3A+CjxwPuaUtumbhuenr+WI
huWQju+8jOWVhuaIt+WPr+S7peWcqOKAnOaUtuasvuacieekvOKAneS4reWFkeaNojxzcGFuIGNs
YXNzPSJ3cGNvbV9rZXl3b3JkX2xpbmsiPuiFvuiurzwvc3Bhbj7njovljaHjgIHlvq7kv6Hor7vk
uabliLjjgIHohb7orq/op4bpopFWSVDljaHjgIHlhajmsJFL5q2M6YGT5YW344CBPHNwYW4gY2xh
c3M9IndwY29tX2tleXdvcmRfbGluayI+5Lqs5LicPC9zcGFuPuWIuOOAgeWUr+WTgeS8muWIuOet
ieWkmuagt+S6p+WTgeWSjOS9k+mqjOOAgjwvcD4KPGgyPjPjgIE8c3BhbiBjbGFzcz0id3Bjb21f
a2V5d29yZF9saW5rIj7plKTlrZA8L3NwYW4+5pWw56CB56eR5oqA6auY5bGC5Y+Y5pu077ya572X
5rC45rWp5LiN5YaN5Lu75rOV5Lq677yM5YW25L2ZMTDkvY3okaPkuovlhajpg6jpgIDlh7o8L2gy
Pgo8cD7mja7lpKnnnLzmn6XmlbDmja7mmL7npLrvvIwyMDE45bm0MTLmnIg15pel77yMPHNwYW4g
Y2xhc3M9IndwY29tX2tleXdvcmRfbGluayI+6ZSk5a2Q56eR5oqAPC9zcGFuPu+8iOWMl+S6rO+8
ieiCoeS7veaciemZkOWFrOWPuOWFqOi1hOWtkOWFrOWPuOWMl+S6rOmUpOWtkOaVsOeggeenkeaK
gOaciemZkOWFrOWPuOazleS6uuS7o+ihqOWPkeeUn+WPmOabtO+8jOeUsee9l+awuOa1qeWPmOab
tOS4uua4qea0quWWnO+8jOa4qea0quWWnOWQjOaXtuaLheS7u+e7j+eQhuS4gOiBjO+8jOe9l+aw
uOa1qeeUseiRo+S6i+mVv+WPmOabtOS4uuaJp+ihjOiRo+S6i++8jOWFtuS7ljEw5L2N6JGj5LqL
5YWo6YOo6YCA5Ye644CCPC9wPgo8cD48bm9zY3JpcHQ+PC9ub3NjcmlwdD48L3A+CjxwPuatpOWk
lu+8jOaNruWkqeecvOafpeaVsOaNruaYvuekuu+8jOS7iuW5tDEx5pyIMjjml6XvvIzor6Xlhazl
j7jogqHkuJznlLHplKTlrZDnp5HmioDvvIjljJfkuqzvvInmnInpmZDlhazlj7jlj5jmm7TkuLrp
lKTlrZDnp5HmioDvvIjljJfkuqzvvInogqHku73mnInpmZDlhazlj7jvvIzmr43lhazlj7jms5Xk
urrlkozlpKfogqHkuJzku43mmK/nvZfmsLjmtanjgILmja7nvZfmsLjmtanlvq7ljZrmmL7npLrv
vIzmuKnmtKrllpzkuLrliY3ogIHnvZfoi7Hor63ln7norq3lkIzkuovjgII8L3A+CjxoMj4044CB
5ZWG5a625Li+5oql5ou85aSa5aSa5raJ5auMJiM4MjIxO+S6jOa4hSYjODIyMTsg5ou85aSa5aSa
OuS4vuaKpeaWueS4uuWUruWBh+WVhuWutjwvaDI+CjxwPuacieWVhuWutuWQkei0oue7j+e9keeI
huaWmeensO+8jOS4reWbveS6uuawkemTtuihjOS4iua1t+WIhuihjOW3suehruiupOaLvOWkmuWk
muaXoOivgee7j+iQpeaUr+S7mOihjOS4uuOAguWcqOivpeWVhuWutuWHuuekuueahOOAiuS4vuaK
peaEj+ingeetlOWkjeaEj+ingeS5puOAi+S4re+8jOS4reWbveS6uuawkemTtuihjOS4iua1t+Wc
qOetlOWkjeS4reaMh+WHuuebuOWFs+mDqOmXqOW3suWvueWvu+aipuWFrOWPuOW8gOWxleiwg+af
peWPluivge+8jOiupOWumuivpeWFrOWPuOWtmOWcqOaXoOivgee7j+iQpeaUr+S7mOS4muWKoeih
jOS4uu+8jOW5tuW3suimgeaxguWFtui/m+ihjOaVtOaUue+8jOebruWJje+8jOivpeWFrOWPuOag
ueaNruebuOWFs+imgeaxguato+WcqOaVtOaUueS4reOAguivpeWQjeWVhuWutuWQkei0oue7j+e9
keWPjeaYoO+8jOebruWJjeW5s+WkmuWkmuWTpue7k+eul+aWueW8j+i/mOaYr+S4gOagt+eahO+8
jOWwseaYr+S7peWJjeeahOaUtuasvuS6uuaYr+aLvOWkmuWkmu+8jOeOsOWcqOWGmeeahOaUtuas
vuS6uuaYr+aLvOWkmuWkmuWVhuWutu+8jOS9huWFtuWunui/mOaYr+i/m+S6huaLvOWkmuWkmuea
hOi0puaIt++8jOWPquaYr+aUueS6huWQjeWtl+iAjOW3suOAguWvueatpO+8jOaLvOWkmuWkmuaW
uemdouWvuVRlY2hXZWLlm57lupTnp7DvvJrkuL7miqXmlrnns7vllK7lgYfllYblrrbvvIzlhbbl
hoDmnJvlsIbnlLXllYZPMk/ooYzkuJrlnKjmlK/ku5jmuIXnrpfpoobln5/kuK3mma7pgY3lrZjl
nKjnmoTnjrDlrp7nirblhrXkuI7lhbbllK7lgYfkuYvlkI7nmoTotZTku5jkuovku7bmt7fkuLrk
uIDosIjvvIzpgIPpgb/ms5Xlvovlj4rllYbkuovnuqblrprnmoTliLboo4HjgII8L3A+CjxoMT7j
gJDooYzkuJrlkajovrnjgJE8L2gxPgo8cD4x44CB55aR5Ly85YaF6YOo6YKu5Lu25pud5YWJ77ya
6ZSk5a2Q56eR5oqAMTHmnIjlt6XotYTml6Dms5XlpoLmnJ/lj5HmlL48YnIgLz4KMuOAgeS8oOS4
reWbveWcqOaOqOi/m+S4i+iwg+e+juWbveeUn+S6p+axvei9puWFs+eojjxiciAvPgoz44CB55m+
5bqm5Zug5bm05oql5L+h5oGv5LiN5a6e6KKr5bel5L+h6YOo54K55ZCN77yM57O76L+R5pel5p2l
56ys5LqM5qyh6KKr54K55ZCNPGJyIC8+CjTjgIHpmL/ph4zmiqvpnLLlj4wxMuWJjeWklei0reeJ
qei9puaVsOaNru+8mui/kTHkur/kurrliqDotK3llYblk4HotoUxNeS7tjxiciAvPgo144CB5pC6
56iL5LiK57q/55uu55qE5Zyw56ef6L2m5Lia5Yqh77yM5bm26K6h5YiS5o6o5Ye65L6b5bqU6ZO+
6J6N6LWE56ef6LWB5Lqn5ZOBPGJyIC8+CjbjgIExMjMwNuWwj+eoi+W6j+ato+W8j+S4iue6v+mr
mOmTgeiuoumkkOWKn+iDve+8jOaJq+e6uOi0qOi9puelqOS6jOe7tOeggeebtOaOpei/m+WFpTxi
ciAvPgo344CB5reY5a6d5Y+R5biDMjAxOOawkemXtOe+jumjn+WcsOWbvu+8muieuuibs+eyieaJ
k+i0peeDpOWGt+mdouaIkOmcuOS4uzxiciAvPgo444CB6Zi/6YeM5bCG5oiQ56uL5pys5Zyw55Sf
5rS756CU56m26ZmiPGJyIC8+CjnjgIHnpL7ljLrlhbvmiJDpobXmuLjjgIrmkanlsJTluoTlm63j
gIvlrqPluIPkuIvnur/lgZzmraLov5DokKU8YnIgLz4KMTDjgIHliqDmi7/lpKfms5Xlrpjlh4bk
uojljY7kuLpDRk/lrZ/mmZroiJ/kv53ph4o8YnIgLz4KMTHjgIHohb7orq/pn7PkuZBJUE/lj5Ho
oYzku7cxM+e+juWFg++8jOS8sOWAvDIxM+S6v+e+juWFgzwvcD4KPGgxPuOAkOa1t+WkluaWsOmX
u+OAkTwvaDE+CjxwPjHjgIHkv4Tmi5/npoHmraI8c3BhbiBjbGFzcz0id3Bjb21fa2V5d29yZF9s
aW5rIj7mlK/ku5jlrp08L3NwYW4+44CB5b6u5L+h562J5aSW5Zu955S15a2Q5pSv5LuY5ZCR5L+E
572X5pav5Lq65o+Q5L6b5pyN5YqhPGJyIC8+CjLjgIHmkanmi5zmraPmjqXlj5flvrflm73nm5Hn
rqHmnLrmnoTosIPmn6XvvIzooqvmgIDnlpHov53lj43mrKfmtLLmlbDmja7ms5U8YnIgLz4KM+OA
geepuuWuouassuWcqOS4reWbveaOqOebtOWNh+acuueJiDxzcGFuIGNsYXNzPSJ3cGNvbV9rZXl3
b3JkX2xpbmsiPua7tOa7tDwvc3Bhbj7vvIzokL3lnLDmlrnmoYjku43lvoXmjqLorqg8YnIgLz4K
NOOAgeKAi+S8oOaJjuWFi+S8r+agvOmCgOivt+W+rui9r+aAu+ijgeWKoOebnyBGYWNlYm9vazxi
ciAvPgo144CB54m55pav5ouJQ0VP6ams5pav5YWL56ew5bCG5ZyoMjAxOeW5tOaOqOWHuuearuWN
oTxiciAvPgo244CBVWJlcumAieaLqeWkp+aRqeaLheS7u+aYjuW5tElQT+S4u+aJv+mUgOWVhu+8
jOS8sOWAvOi+vjEyMDDkur/nvo7lhYM8YnIgLz4KN+OAgUZhY2Vib29r5YaN5qyh6K+V5rC05pCc
57Si5bm/5ZGKPC9wPgo8aDE+44CQ6J6N6LWE5pS26LSt44CRPC9oMT4KPHA+MeOAgeS+m+W6lOmT
vuacjeWKoeWFrOWPuOKAnOa1t+ixmuS+m+W6lOmTvuKAneiOt+aVsOWNg+S4h+e+jumHkeiejei1
hDxiciAvPgoy44CB6Zu25ZSu5pyN5Yqh5ZWG4oCc6bKc55Sf5rS74oCd6I635paw5LiA6L2u5pWw
5Y2D5LiH576O5YWD5oqV6LWEPGJyIC8+CjPjgIHlkpbllaHmnLrlk4HniYzigJxpRHJpcOKAneWu
jOaIkOS6v+WFg+WPsOW4gVByZS1B6L2u6J6N6LWEPGJyIC8+CjTjgIHlnKjnur/prZTmlrnmlZnl
rablubPlj7DigJznlarojITprZTmlrnigJ3ojrfmlbDnmb7kuIfnvo7ph5HmipXotYQ8YnIgLz4K
NeOAgemHkeiejeacuuaehOWQiOinhOayn+mAmuWPiuWNj+WQjOW3peWFt+KAnOWHoeazsOaegeWu
ouKAneiOt+i/kTMwMDDkuIflhYNB6L2u6J6N6LWEPGJyIC8+CjbjgIHnpL7kuqTnlLXllYbigJzm
r4/ml6XkuIDmt5jigJ3lrozmiJAx5Lq/576O5YWDQui9ruiejei1hDxiciAvPgo344CB5oOF5oSf
PHNwYW4gY2xhc3M9IndwY29tX2tleXdvcmRfbGluayI+5Lq65bel5pm66IO9PC9zcGFuPuaKgOac
r+S8geS4muKAnOeruemXtOaZuuiDveKAneWujOaIkELova4zMDAw5LiH576O5YWD6J6N6LWEPGJy
IC8+CjjjgIHkvIHkuJrkuJrliqHlronlhajmnI3liqHllYbigJzkurrkurrkupHlm77igJ3ojrfl
vpcx5Lq/5Lq65rCR5biBUHJlLUHova7ono3otYQ8YnIgLz4KOeOAgeWMu+eWl+WZqOaisOWPiuiu
vuWkh+eahOS8geS4muKAnOWuiemSm+WFi+WMu+eWl+KAneiOt+W+l+aVsOWNg+S4h+S6uuawkeW4
gUHova7ono3otYQ8YnIgLz4KMTDjgIHliJvkuJrnu4/mtY7nlJ/mgIHpk77mnI3liqHllYbigJzl
j6/po57njKrigJ3ojrflvpfmlbDnmb7kuIfkurrmsJHluIHlpKnkvb/ova7ono3otYQ8L3A+Cjxw
PuWFs+azqOW+ruS/oeWFrOS8l+i0puWPt+KAnOazoemdouWwj+mVh+KAneabtOaXqeiOt+WPluaX
qeaKpeWGheWuue+8gTwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJlbnRyeS1jb3B5cmlnaHQiPjxwPuacrOaWh+ad
peiHquaKleeov++8jOS4jeS7o+ihqOazoemdouWwj+mVh+eri+Wcuu+8jOWmguiLpei9rOi9ve+8
jOivt+azqOaYjuWHuuWkhO+8mmh0dHA6Ly93d3cucG10b3duLmNvbS9hcmNoaXZlcy8xMzc0MjUu
aHRtbDwvcD48L2Rpdj4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAg
ICAgICAgICAgICAg
Content-Type: text/html; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: base64
From: =?utf-8?b?5bCP6IOh5a2QSGFzb0A/Pz8=?=
To: =?utf-8?b?56We56eY5Lq6QD8/Pw==?=
Subject: =?utf-8?b?5rOh6Z2i5pep5oqlfOefpeS5juWbnuW6lOWkp+inhOaooeijgeWRmOezu+iwo+iogOOAgeWVhuWutuS4vuaKpeaLvOWkmuWkmua2ieWrjOS6jOa4heOAgemYv+mHjOWwhuaIkOeri+acrOWcsOeUn+a0u+eglOeptumZouOAgeS8oOS4reWbveWcqOaOqOi/m+S4i+iwg+e+juWbveeUn+S6p+axvei9puWFs+eojg==?=

CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZW50cnkiPgogICAgICAgICAgICAgICAg
ICAgICAgICA8ZGl2IGNsYXNzPSJlbnRyeS1oZWFkIj4KICAgICAgICAgICAgICAgICAgICAgICAg
ICAgIDxoMSBjbGFzcz0iZW50cnktdGl0bGUiPuazoemdouaXqeaKpXznn6XkuY7lm57lupTlpKfo
p4TmqKHoo4HlkZjns7vosKPoqIDjgIHllYblrrbkuL7miqXmi7zlpJrlpJrmtonlq4zkuozmuIXj
gIHpmL/ph4zlsIbmiJDnq4vmnKzlnLDnlJ/mtLvnoJTnqbbpmaLjgIHkvKDkuK3lm73lnKjmjqjo
v5vkuIvosIPnvo7lm73nlJ/kuqfmsb3ovablhbPnqI48L2gxPgogICAgICAgICAgICAgICAgICAg
ICAgICAgICAgPGRpdiBjbGFzcz0iZW50cnktaW5mbyI+CiAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICDms6HpnaLlsI/plYcKICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZG90Ij7igKI8L3NwYW4+
CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+NeWwj+aXtuWJjTwvc3Bhbj4K
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZG90Ij7igKI8L3Nw
YW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg5pep5oqlICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bh
biBjbGFzcz0iZG90Ij7igKI8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgIDxzcGFuPumYheivuyA1NDI8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAg
ICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZW50cnktY29udGVudCBjbGVh
cmZpeCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDE+56eR5oqA5aS05p2hPC9oMT4K
PGgyPjHjgIHnn6XkuY7lm57lupTigJzoo4HlkZgzMDDkurrigJ3vvJrlpKfop4TmqKHoo4HlkZjn
s7vosKPoqIDlpJrlspfkvY3mraPlub/ms5vmi5vkuro8L2gyPgo8cD7pkojlr7nljbPlsIboo4Hl
kZgzMDDkurrnmoTniIbmlpnvvIznn6XkuY7mlrnpnaLlm57lupTnp7DvvIzlpKfop4TmqKHoo4Hl
kZjmmK/osKPkvKDjgILnn6XkuY7mlrnpnaLooajnpLrvvIwyMDE45bm055So5oi35aKe6ZW/6LaF
MTAwJe+8jOebruWJjeazqOWGjOeUqOaIt+eqgeegtDIuMuS6v+OAguS7iuW5tDjmnIg45pel77yM
55+l5LmO5Y+R5biD5rW355uQ6K6h5YiS77yM5Yib5aeL5Lq65ZGo5rqQ6YCa6L+H6KeG6aKR5a6j
5biD55+l5LmO5bey57uP5a6M5oiQMi435Lq/576O5YWDRei9ruiejei1hO+8jOWwhuWKoOmAn+WF
qOawkeefpeivhuWGheWuueW5s+WPsOeahOW7uuiuvu+8jOWKoOWkp+WcqCA8c3BhbiBjbGFzcz0i
d3Bjb21fa2V5d29yZF9saW5rIj5BSTwvc3Bhbj4g5oqA5pyv44CB5YaF5a6555Sf5oCB44CB55+l
6K+G5pyN5Yqh5ZKM5ZWG5Lia5YyW562J5aSa5Liq57u05bqm55qE5oqV5YWl77yM55uu5YmN55yL
5piv6ZyA6KaB5aSn6YeP55qE5Lq65ZGY55qE77yM5bm25LiN5Lya6L+b6KGM5aSn6KeE5qih6KOB
5ZGY44CCPC9wPgo8aDI+MuOAgeW+ruS/oeaUr+S7mOKAnOaUtuasvuacieekvOKAneWNs+WwhuS4
iue6vzwvaDI+CjxwPuW+ruS/oeaUr+S7mOKAnOaUtuasvuacieekvOKAneWKn+iDveWNs+WwhuS4
iue6v+OAguWVhuaIt+mAmui/h+W+ruS/oeaUr+S7mOWumOaWueaUtuasvueggeaUtuasvuWwhuWP
r+iOt+W+l+enr+WIhu+8jOW5tuiDveWcqOKAnOaUtuasvuacieekvOKAneWFkeaNouWkmuenjeS8
mOi0qOOAgeS4quaAp+WMlueahOS6p+WTgeacjeWKoeWSjOadg+ebiu+8jOWVhuaIt+WPqumcgOS9
v+eUqOW+ruS/oeaUr+S7mOWumOaWuemCruWvhOeahOaUtuasvueggei/m+ihjOaUtuasvu+8jOaU
tuasvuavj+a7oTHlhYPljbPlj6/ojrflvpcx5Liq56ev5YiG77yM5Zyo4oCc5pS25qy+5pyJ56S8
4oCd5Lit5bCx6IO95L2/55So57Sv6K6h56ev5YiG5YWR5o2i5YWN6LS55o+Q546w6aKd5bqm77yM
5bm25Y+v5Zyo4oCc5pS25qy+5bCP6LSm5pys4oCd5bCP56iL5bqP5Lit5p+l55yL6K+m5oOF5bm2
5L2/55So44CCPC9wPgo8cD48bm9zY3JpcHQ+PC9ub3NjcmlwdD48L3A+CjxwPuaUtumbhuenr+WI
huWQju+8jOWVhuaIt+WPr+S7peWcqOKAnOaUtuasvuacieekvOKAneS4reWFkeaNojxzcGFuIGNs
YXNzPSJ3cGNvbV9rZXl3b3JkX2xpbmsiPuiFvuiurzwvc3Bhbj7njovljaHjgIHlvq7kv6Hor7vk
uabliLjjgIHohb7orq/op4bpopFWSVDljaHjgIHlhajmsJFL5q2M6YGT5YW344CBPHNwYW4gY2xh
c3M9IndwY29tX2tleXdvcmRfbGluayI+5Lqs5LicPC9zcGFuPuWIuOOAgeWUr+WTgeS8muWIuOet
ieWkmuagt+S6p+WTgeWSjOS9k+mqjOOAgjwvcD4KPGgyPjPjgIE8c3BhbiBjbGFzcz0id3Bjb21f
a2V5d29yZF9saW5rIj7plKTlrZA8L3NwYW4+5pWw56CB56eR5oqA6auY5bGC5Y+Y5pu077ya572X
5rC45rWp5LiN5YaN5Lu75rOV5Lq677yM5YW25L2ZMTDkvY3okaPkuovlhajpg6jpgIDlh7o8L2gy
Pgo8cD7mja7lpKnnnLzmn6XmlbDmja7mmL7npLrvvIwyMDE45bm0MTLmnIg15pel77yMPHNwYW4g
Y2xhc3M9IndwY29tX2tleXdvcmRfbGluayI+6ZSk5a2Q56eR5oqAPC9zcGFuPu+8iOWMl+S6rO+8
ieiCoeS7veaciemZkOWFrOWPuOWFqOi1hOWtkOWFrOWPuOWMl+S6rOmUpOWtkOaVsOeggeenkeaK
gOaciemZkOWFrOWPuOazleS6uuS7o+ihqOWPkeeUn+WPmOabtO+8jOeUsee9l+awuOa1qeWPmOab
tOS4uua4qea0quWWnO+8jOa4qea0quWWnOWQjOaXtuaLheS7u+e7j+eQhuS4gOiBjO+8jOe9l+aw
uOa1qeeUseiRo+S6i+mVv+WPmOabtOS4uuaJp+ihjOiRo+S6i++8jOWFtuS7ljEw5L2N6JGj5LqL
5YWo6YOo6YCA5Ye644CCPC9wPgo8cD48bm9zY3JpcHQ+PC9ub3NjcmlwdD48L3A+CjxwPuatpOWk
lu+8jOaNruWkqeecvOafpeaVsOaNruaYvuekuu+8jOS7iuW5tDEx5pyIMjjml6XvvIzor6Xlhazl
j7jogqHkuJznlLHplKTlrZDnp5HmioDvvIjljJfkuqzvvInmnInpmZDlhazlj7jlj5jmm7TkuLrp
lKTlrZDnp5HmioDvvIjljJfkuqzvvInogqHku73mnInpmZDlhazlj7jvvIzmr43lhazlj7jms5Xk
urrlkozlpKfogqHkuJzku43mmK/nvZfmsLjmtanjgILmja7nvZfmsLjmtanlvq7ljZrmmL7npLrv
vIzmuKnmtKrllpzkuLrliY3ogIHnvZfoi7Hor63ln7norq3lkIzkuovjgII8L3A+CjxoMj4044CB
5ZWG5a625Li+5oql5ou85aSa5aSa5raJ5auMJiM4MjIxO+S6jOa4hSYjODIyMTsg5ou85aSa5aSa
OuS4vuaKpeaWueS4uuWUruWBh+WVhuWutjwvaDI+CjxwPuacieWVhuWutuWQkei0oue7j+e9keeI
huaWmeensO+8jOS4reWbveS6uuawkemTtuihjOS4iua1t+WIhuihjOW3suehruiupOaLvOWkmuWk
muaXoOivgee7j+iQpeaUr+S7mOihjOS4uuOAguWcqOivpeWVhuWutuWHuuekuueahOOAiuS4vuaK
peaEj+ingeetlOWkjeaEj+ingeS5puOAi+S4re+8jOS4reWbveS6uuawkemTtuihjOS4iua1t+Wc
qOetlOWkjeS4reaMh+WHuuebuOWFs+mDqOmXqOW3suWvueWvu+aipuWFrOWPuOW8gOWxleiwg+af
peWPluivge+8jOiupOWumuivpeWFrOWPuOWtmOWcqOaXoOivgee7j+iQpeaUr+S7mOS4muWKoeih
jOS4uu+8jOW5tuW3suimgeaxguWFtui/m+ihjOaVtOaUue+8jOebruWJje+8jOivpeWFrOWPuOag
ueaNruebuOWFs+imgeaxguato+WcqOaVtOaUueS4reOAguivpeWQjeWVhuWutuWQkei0oue7j+e9
keWPjeaYoO+8jOebruWJjeW5s+WkmuWkmuWTpue7k+eul+aWueW8j+i/mOaYr+S4gOagt+eahO+8
jOWwseaYr+S7peWJjeeahOaUtuasvuS6uuaYr+aLvOWkmuWkmu+8jOeOsOWcqOWGmeeahOaUtuas
vuS6uuaYr+aLvOWkmuWkmuWVhuWutu+8jOS9huWFtuWunui/mOaYr+i/m+S6huaLvOWkmuWkmuea
hOi0puaIt++8jOWPquaYr+aUueS6huWQjeWtl+iAjOW3suOAguWvueatpO+8jOaLvOWkmuWkmuaW
uemdouWvuVRlY2hXZWLlm57lupTnp7DvvJrkuL7miqXmlrnns7vllK7lgYfllYblrrbvvIzlhbbl
hoDmnJvlsIbnlLXllYZPMk/ooYzkuJrlnKjmlK/ku5jmuIXnrpfpoobln5/kuK3mma7pgY3lrZjl
nKjnmoTnjrDlrp7nirblhrXkuI7lhbbllK7lgYfkuYvlkI7nmoTotZTku5jkuovku7bmt7fkuLrk
uIDosIjvvIzpgIPpgb/ms5Xlvovlj4rllYbkuovnuqblrprnmoTliLboo4HjgII8L3A+CjxoMT7j
gJDooYzkuJrlkajovrnjgJE8L2gxPgo8cD4x44CB55aR5Ly85YaF6YOo6YKu5Lu25pud5YWJ77ya
6ZSk5a2Q56eR5oqAMTHmnIjlt6XotYTml6Dms5XlpoLmnJ/lj5HmlL48YnIgLz4KMuOAgeS8oOS4
reWbveWcqOaOqOi/m+S4i+iwg+e+juWbveeUn+S6p+axvei9puWFs+eojjxiciAvPgoz44CB55m+
5bqm5Zug5bm05oql5L+h5oGv5LiN5a6e6KKr5bel5L+h6YOo54K55ZCN77yM57O76L+R5pel5p2l
56ys5LqM5qyh6KKr54K55ZCNPGJyIC8+CjTjgIHpmL/ph4zmiqvpnLLlj4wxMuWJjeWklei0reeJ
qei9puaVsOaNru+8mui/kTHkur/kurrliqDotK3llYblk4HotoUxNeS7tjxiciAvPgo144CB5pC6
56iL5LiK57q/55uu55qE5Zyw56ef6L2m5Lia5Yqh77yM5bm26K6h5YiS5o6o5Ye65L6b5bqU6ZO+
6J6N6LWE56ef6LWB5Lqn5ZOBPGJyIC8+CjbjgIExMjMwNuWwj+eoi+W6j+ato+W8j+S4iue6v+mr
mOmTgeiuoumkkOWKn+iDve+8jOaJq+e6uOi0qOi9puelqOS6jOe7tOeggeebtOaOpei/m+WFpTxi
ciAvPgo344CB5reY5a6d5Y+R5biDMjAxOOawkemXtOe+jumjn+WcsOWbvu+8muieuuibs+eyieaJ
k+i0peeDpOWGt+mdouaIkOmcuOS4uzxiciAvPgo444CB6Zi/6YeM5bCG5oiQ56uL5pys5Zyw55Sf
5rS756CU56m26ZmiPGJyIC8+CjnjgIHnpL7ljLrlhbvmiJDpobXmuLjjgIrmkanlsJTluoTlm63j
gIvlrqPluIPkuIvnur/lgZzmraLov5DokKU8YnIgLz4KMTDjgIHliqDmi7/lpKfms5Xlrpjlh4bk
uojljY7kuLpDRk/lrZ/mmZroiJ/kv53ph4o8YnIgLz4KMTHjgIHohb7orq/pn7PkuZBJUE/lj5Ho
oYzku7cxM+e+juWFg++8jOS8sOWAvDIxM+S6v+e+juWFgzwvcD4KPGgxPuOAkOa1t+WkluaWsOmX
u+OAkTwvaDE+CjxwPjHjgIHkv4Tmi5/npoHmraI8c3BhbiBjbGFzcz0id3Bjb21fa2V5d29yZF9s
aW5rIj7mlK/ku5jlrp08L3NwYW4+44CB5b6u5L+h562J5aSW5Zu955S15a2Q5pSv5LuY5ZCR5L+E
572X5pav5Lq65o+Q5L6b5pyN5YqhPGJyIC8+CjLjgIHmkanmi5zmraPmjqXlj5flvrflm73nm5Hn
rqHmnLrmnoTosIPmn6XvvIzooqvmgIDnlpHov53lj43mrKfmtLLmlbDmja7ms5U8YnIgLz4KM+OA
geepuuWuouassuWcqOS4reWbveaOqOebtOWNh+acuueJiDxzcGFuIGNsYXNzPSJ3cGNvbV9rZXl3
b3JkX2xpbmsiPua7tOa7tDwvc3Bhbj7vvIzokL3lnLDmlrnmoYjku43lvoXmjqLorqg8YnIgLz4K
NOOAgeKAi+S8oOaJjuWFi+S8r+agvOmCgOivt+W+rui9r+aAu+ijgeWKoOebnyBGYWNlYm9vazxi
ciAvPgo144CB54m55pav5ouJQ0VP6ams5pav5YWL56ew5bCG5ZyoMjAxOeW5tOaOqOWHuuearuWN
oTxiciAvPgo244CBVWJlcumAieaLqeWkp+aRqeaLheS7u+aYjuW5tElQT+S4u+aJv+mUgOWVhu+8
jOS8sOWAvOi+vjEyMDDkur/nvo7lhYM8YnIgLz4KN+OAgUZhY2Vib29r5YaN5qyh6K+V5rC05pCc
57Si5bm/5ZGKPC9wPgo8aDE+44CQ6J6N6LWE5pS26LSt44CRPC9oMT4KPHA+MeOAgeS+m+W6lOmT
vuacjeWKoeWFrOWPuOKAnOa1t+ixmuS+m+W6lOmTvuKAneiOt+aVsOWNg+S4h+e+jumHkeiejei1
hDxiciAvPgoy44CB6Zu25ZSu5pyN5Yqh5ZWG4oCc6bKc55Sf5rS74oCd6I635paw5LiA6L2u5pWw
5Y2D5LiH576O5YWD5oqV6LWEPGJyIC8+CjPjgIHlkpbllaHmnLrlk4HniYzigJxpRHJpcOKAneWu
jOaIkOS6v+WFg+WPsOW4gVByZS1B6L2u6J6N6LWEPGJyIC8+CjTjgIHlnKjnur/prZTmlrnmlZnl
rablubPlj7DigJznlarojITprZTmlrnigJ3ojrfmlbDnmb7kuIfnvo7ph5HmipXotYQ8YnIgLz4K
NeOAgemHkeiejeacuuaehOWQiOinhOayn+mAmuWPiuWNj+WQjOW3peWFt+KAnOWHoeazsOaegeWu
ouKAneiOt+i/kTMwMDDkuIflhYNB6L2u6J6N6LWEPGJyIC8+CjbjgIHnpL7kuqTnlLXllYbigJzm
r4/ml6XkuIDmt5jigJ3lrozmiJAx5Lq/576O5YWDQui9ruiejei1hDxiciAvPgo344CB5oOF5oSf
PHNwYW4gY2xhc3M9IndwY29tX2tleXdvcmRfbGluayI+5Lq65bel5pm66IO9PC9zcGFuPuaKgOac
r+S8geS4muKAnOeruemXtOaZuuiDveKAneWujOaIkELova4zMDAw5LiH576O5YWD6J6N6LWEPGJy
IC8+CjjjgIHkvIHkuJrkuJrliqHlronlhajmnI3liqHllYbigJzkurrkurrkupHlm77igJ3ojrfl
vpcx5Lq/5Lq65rCR5biBUHJlLUHova7ono3otYQ8YnIgLz4KOeOAgeWMu+eWl+WZqOaisOWPiuiu
vuWkh+eahOS8geS4muKAnOWuiemSm+WFi+WMu+eWl+KAneiOt+W+l+aVsOWNg+S4h+S6uuawkeW4
gUHova7ono3otYQ8YnIgLz4KMTDjgIHliJvkuJrnu4/mtY7nlJ/mgIHpk77mnI3liqHllYbigJzl
j6/po57njKrigJ3ojrflvpfmlbDnmb7kuIfkurrmsJHluIHlpKnkvb/ova7ono3otYQ8L3A+Cjxw
PuWFs+azqOW+ruS/oeWFrOS8l+i0puWPt+KAnOazoemdouWwj+mVh+KAneabtOaXqeiOt+WPluaX
qeaKpeWGheWuue+8gTwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJlbnRyeS1jb3B5cmlnaHQiPjxwPuacrOaWh+ad
peiHquaKleeov++8jOS4jeS7o+ihqOazoemdouWwj+mVh+eri+Wcuu+8jOWmguiLpei9rOi9ve+8
jOivt+azqOaYjuWHuuWkhO+8mmh0dHA6Ly93d3cucG10b3duLmNvbS9hcmNoaXZlcy8xMzc0MjUu
aHRtbDwvcD48L2Rpdj4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAg
ICAgICAgICAgICAg
Content-Type: text/html; charset="utf-8"
MIME-Version: 1.0
Content-Transfer-Encoding: base64
From: =?utf-8?b?5bCP6IOh5a2QPD8/Pz4=?=
To: =?utf-8?b?56We56eY5Lq6PD8/Pz4=?=
Subject: =?utf-8?b?5rOh6Z2i5pep5oqlfOefpeS5juWbnuW6lOWkp+inhOaooeijgeWRmOezu+iwo+iogOOAgeWVhuWutuS4vuaKpeaLvOWkmuWkmua2ieWrjOS6jOa4heOAgemYv+mHjOWwhuaIkOeri+acrOWcsOeUn+a0u+eglOeptumZouOAgeS8oOS4reWbveWcqOaOqOi/m+S4i+iwg+e+juWbveeUn+S6p+axvei9puWFs+eojg==?=

CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZW50cnkiPgogICAgICAgICAgICAgICAg
ICAgICAgICA8ZGl2IGNsYXNzPSJlbnRyeS1oZWFkIj4KICAgICAgICAgICAgICAgICAgICAgICAg
ICAgIDxoMSBjbGFzcz0iZW50cnktdGl0bGUiPuazoemdouaXqeaKpXznn6XkuY7lm57lupTlpKfo
p4TmqKHoo4HlkZjns7vosKPoqIDjgIHllYblrrbkuL7miqXmi7zlpJrlpJrmtonlq4zkuozmuIXj
gIHpmL/ph4zlsIbmiJDnq4vmnKzlnLDnlJ/mtLvnoJTnqbbpmaLjgIHkvKDkuK3lm73lnKjmjqjo
v5vkuIvosIPnvo7lm73nlJ/kuqfmsb3ovablhbPnqI48L2gxPgogICAgICAgICAgICAgICAgICAg
ICAgICAgICAgPGRpdiBjbGFzcz0iZW50cnktaW5mbyI+CiAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICDms6HpnaLlsI/plYcKICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZG90Ij7igKI8L3NwYW4+
CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+NeWwj+aXtuWJjTwvc3Bhbj4K
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZG90Ij7igKI8L3Nw
YW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg5pep5oqlICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bh
biBjbGFzcz0iZG90Ij7igKI8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgIDxzcGFuPumYheivuyA1NTA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAg
ICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZW50cnktY29udGVudCBjbGVh
cmZpeCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDE+56eR5oqA5aS05p2hPC9oMT4K
PGgyPjHjgIHnn6XkuY7lm57lupTigJzoo4HlkZgzMDDkurrigJ3vvJrlpKfop4TmqKHoo4HlkZjn
s7vosKPoqIDlpJrlspfkvY3mraPlub/ms5vmi5vkuro8L2gyPgo8cD7pkojlr7nljbPlsIboo4Hl
kZgzMDDkurrnmoTniIbmlpnvvIznn6XkuY7mlrnpnaLlm57lupTnp7DvvIzlpKfop4TmqKHoo4Hl
kZjmmK/osKPkvKDjgILnn6XkuY7mlrnpnaLooajnpLrvvIwyMDE45bm055So5oi35aKe6ZW/6LaF
MTAwJe+8jOebruWJjeazqOWGjOeUqOaIt+eqgeegtDIuMuS6v+OAguS7iuW5tDjmnIg45pel77yM
55+l5LmO5Y+R5biD5rW355uQ6K6h5YiS77yM5Yib5aeL5Lq65ZGo5rqQ6YCa6L+H6KeG6aKR5a6j
5biD55+l5LmO5bey57uP5a6M5oiQMi435Lq/576O5YWDRei9ruiejei1hO+8jOWwhuWKoOmAn+WF
qOawkeefpeivhuWGheWuueW5s+WPsOeahOW7uuiuvu+8jOWKoOWkp+WcqCA8c3BhbiBjbGFzcz0i
d3Bjb21fa2V5d29yZF9saW5rIj5BSTwvc3Bhbj4g5oqA5pyv44CB5YaF5a6555Sf5oCB44CB55+l
6K+G5pyN5Yqh5ZKM5ZWG5Lia5YyW562J5aSa5Liq57u05bqm55qE5oqV5YWl77yM55uu5YmN55yL
5piv6ZyA6KaB5aSn6YeP55qE5Lq65ZGY55qE77yM5bm25LiN5Lya6L+b6KGM5aSn6KeE5qih6KOB
5ZGY44CCPC9wPgo8aDI+MuOAgeW+ruS/oeaUr+S7mOKAnOaUtuasvuacieekvOKAneWNs+WwhuS4
iue6vzwvaDI+CjxwPuW+ruS/oeaUr+S7mOKAnOaUtuasvuacieekvOKAneWKn+iDveWNs+WwhuS4
iue6v+OAguWVhuaIt+mAmui/h+W+ruS/oeaUr+S7mOWumOaWueaUtuasvueggeaUtuasvuWwhuWP
r+iOt+W+l+enr+WIhu+8jOW5tuiDveWcqOKAnOaUtuasvuacieekvOKAneWFkeaNouWkmuenjeS8
mOi0qOOAgeS4quaAp+WMlueahOS6p+WTgeacjeWKoeWSjOadg+ebiu+8jOWVhuaIt+WPqumcgOS9
v+eUqOW+ruS/oeaUr+S7mOWumOaWuemCruWvhOeahOaUtuasvueggei/m+ihjOaUtuasvu+8jOaU
tuasvuavj+a7oTHlhYPljbPlj6/ojrflvpcx5Liq56ev5YiG77yM5Zyo4oCc5pS25qy+5pyJ56S8
4oCd5Lit5bCx6IO95L2/55So57Sv6K6h56ev5YiG5YWR5o2i5YWN6LS55o+Q546w6aKd5bqm77yM
5bm25Y+v5Zyo4oCc5pS25qy+5bCP6LSm5pys4oCd5bCP56iL5bqP5Lit5p+l55yL6K+m5oOF5bm2
5L2/55So44CCPC9wPgo8cD48bm9zY3JpcHQ+PC9ub3NjcmlwdD48L3A+CjxwPuaUtumbhuenr+WI
huWQju+8jOWVhuaIt+WPr+S7peWcqOKAnOaUtuasvuacieekvOKAneS4reWFkeaNojxzcGFuIGNs
YXNzPSJ3cGNvbV9rZXl3b3JkX2xpbmsiPuiFvuiurzwvc3Bhbj7njovljaHjgIHlvq7kv6Hor7vk
uabliLjjgIHohb7orq/op4bpopFWSVDljaHjgIHlhajmsJFL5q2M6YGT5YW344CBPHNwYW4gY2xh
c3M9IndwY29tX2tleXdvcmRfbGluayI+5Lqs5LicPC9zcGFuPuWIuOOAgeWUr+WTgeS8muWIuOet
ieWkmuagt+S6p+WTgeWSjOS9k+mqjOOAgjwvcD4KPGgyPjPjgIE8c3BhbiBjbGFzcz0id3Bjb21f
a2V5d29yZF9saW5rIj7plKTlrZA8L3NwYW4+5pWw56CB56eR5oqA6auY5bGC5Y+Y5pu077ya572X
5rC45rWp5LiN5YaN5Lu75rOV5Lq677yM5YW25L2ZMTDkvY3okaPkuovlhajpg6jpgIDlh7o8L2gy
Pgo8cD7mja7lpKnnnLzmn6XmlbDmja7mmL7npLrvvIwyMDE45bm0MTLmnIg15pel77yMPHNwYW4g
Y2xhc3M9IndwY29tX2tleXdvcmRfbGluayI+6ZSk5a2Q56eR5oqAPC9zcGFuPu+8iOWMl+S6rO+8
ieiCoeS7veaciemZkOWFrOWPuOWFqOi1hOWtkOWFrOWPuOWMl+S6rOmUpOWtkOaVsOeggeenkeaK
gOaciemZkOWFrOWPuOazleS6uuS7o+ihqOWPkeeUn+WPmOabtO+8jOeUsee9l+awuOa1qeWPmOab
tOS4uua4qea0quWWnO+8jOa4qea0quWWnOWQjOaXtuaLheS7u+e7j+eQhuS4gOiBjO+8jOe9l+aw
uOa1qeeUseiRo+S6i+mVv+WPmOabtOS4uuaJp+ihjOiRo+S6i++8jOWFtuS7ljEw5L2N6JGj5LqL
5YWo6YOo6YCA5Ye644CCPC9wPgo8cD48bm9zY3JpcHQ+PC9ub3NjcmlwdD48L3A+CjxwPuatpOWk
lu+8jOaNruWkqeecvOafpeaVsOaNruaYvuekuu+8jOS7iuW5tDEx5pyIMjjml6XvvIzor6Xlhazl
j7jogqHkuJznlLHplKTlrZDnp5HmioDvvIjljJfkuqzvvInmnInpmZDlhazlj7jlj5jmm7TkuLrp
lKTlrZDnp5HmioDvvIjljJfkuqzvvInogqHku73mnInpmZDlhazlj7jvvIzmr43lhazlj7jms5Xk
urrlkozlpKfogqHkuJzku43mmK/nvZfmsLjmtanjgILmja7nvZfmsLjmtanlvq7ljZrmmL7npLrv
vIzmuKnmtKrllpzkuLrliY3ogIHnvZfoi7Hor63ln7norq3lkIzkuovjgII8L3A+CjxoMj4044CB
5ZWG5a625Li+5oql5ou85aSa5aSa5raJ5auMJiM4MjIxO+S6jOa4hSYjODIyMTsg5ou85aSa5aSa
OuS4vuaKpeaWueS4uuWUruWBh+WVhuWutjwvaDI+CjxwPuacieWVhuWutuWQkei0oue7j+e9keeI
huaWmeensO+8jOS4reWbveS6uuawkemTtuihjOS4iua1t+WIhuihjOW3suehruiupOaLvOWkmuWk
muaXoOivgee7j+iQpeaUr+S7mOihjOS4uuOAguWcqOivpeWVhuWutuWHuuekuueahOOAiuS4vuaK
peaEj+ingeetlOWkjeaEj+ingeS5puOAi+S4re+8jOS4reWbveS6uuawkemTtuihjOS4iua1t+Wc
qOetlOWkjeS4reaMh+WHuuebuOWFs+mDqOmXqOW3suWvueWvu+aipuWFrOWPuOW8gOWxleiwg+af
peWPluivge+8jOiupOWumuivpeWFrOWPuOWtmOWcqOaXoOivgee7j+iQpeaUr+S7mOS4muWKoeih
jOS4uu+8jOW5tuW3suimgeaxguWFtui/m+ihjOaVtOaUue+8jOebruWJje+8jOivpeWFrOWPuOag
ueaNruebuOWFs+imgeaxguato+WcqOaVtOaUueS4reOAguivpeWQjeWVhuWutuWQkei0oue7j+e9
keWPjeaYoO+8jOebruWJjeW5s+WkmuWkmuWTpue7k+eul+aWueW8j+i/mOaYr+S4gOagt+eahO+8
jOWwseaYr+S7peWJjeeahOaUtuasvuS6uuaYr+aLvOWkmuWkmu+8jOeOsOWcqOWGmeeahOaUtuas
vuS6uuaYr+aLvOWkmuWkmuWVhuWutu+8jOS9huWFtuWunui/mOaYr+i/m+S6huaLvOWkmuWkmuea
hOi0puaIt++8jOWPquaYr+aUueS6huWQjeWtl+iAjOW3suOAguWvueatpO+8jOaLvOWkmuWkmuaW
uemdouWvuVRlY2hXZWLlm57lupTnp7DvvJrkuL7miqXmlrnns7vllK7lgYfllYblrrbvvIzlhbbl
hoDmnJvlsIbnlLXllYZPMk/ooYzkuJrlnKjmlK/ku5jmuIXnrpfpoobln5/kuK3mma7pgY3lrZjl
nKjnmoTnjrDlrp7nirblhrXkuI7lhbbllK7lgYfkuYvlkI7nmoTotZTku5jkuovku7bmt7fkuLrk
uIDosIjvvIzpgIPpgb/ms5Xlvovlj4rllYbkuovnuqblrprnmoTliLboo4HjgII8L3A+CjxoMT7j
gJDooYzkuJrlkajovrnjgJE8L2gxPgo8cD4x44CB55aR5Ly85YaF6YOo6YKu5Lu25pud5YWJ77ya
6ZSk5a2Q56eR5oqAMTHmnIjlt6XotYTml6Dms5XlpoLmnJ/lj5HmlL48YnIgLz4KMuOAgeS8oOS4
reWbveWcqOaOqOi/m+S4i+iwg+e+juWbveeUn+S6p+axvei9puWFs+eojjxiciAvPgoz44CB55m+
5bqm5Zug5bm05oql5L+h5oGv5LiN5a6e6KKr5bel5L+h6YOo54K55ZCN77yM57O76L+R5pel5p2l
56ys5LqM5qyh6KKr54K55ZCNPGJyIC8+CjTjgIHpmL/ph4zmiqvpnLLlj4wxMuWJjeWklei0reeJ
qei9puaVsOaNru+8mui/kTHkur/kurrliqDotK3llYblk4HotoUxNeS7tjxiciAvPgo144CB5pC6
56iL5LiK57q/55uu55qE5Zyw56ef6L2m5Lia5Yqh77yM5bm26K6h5YiS5o6o5Ye65L6b5bqU6ZO+
6J6N6LWE56ef6LWB5Lqn5ZOBPGJyIC8+CjbjgIExMjMwNuWwj+eoi+W6j+ato+W8j+S4iue6v+mr
mOmTgeiuoumkkOWKn+iDve+8jOaJq+e6uOi0qOi9puelqOS6jOe7tOeggeebtOaOpei/m+WFpTxi
ciAvPgo344CB5reY5a6d5Y+R5biDMjAxOOawkemXtOe+jumjn+WcsOWbvu+8muieuuibs+eyieaJ
k+i0peeDpOWGt+mdouaIkOmcuOS4uzxiciAvPgo444CB6Zi/6YeM5bCG5oiQ56uL5pys5Zyw55Sf
5rS756CU56m26ZmiPGJyIC8+CjnjgIHnpL7ljLrlhbvmiJDpobXmuLjjgIrmkanlsJTluoTlm63j
gIvlrqPluIPkuIvnur/lgZzmraLov5DokKU8YnIgLz4KMTDjgIHliqDmi7/lpKfms5Xlrpjlh4bk
uojljY7kuLpDRk/lrZ/mmZroiJ/kv53ph4o8YnIgLz4KMTHjgIHohb7orq/pn7PkuZBJUE/lj5Ho
oYzku7cxM+e+juWFg++8jOS8sOWAvDIxM+S6v+e+juWFgzwvcD4KPGgxPuOAkOa1t+WkluaWsOmX
u+OAkTwvaDE+CjxwPjHjgIHkv4Tmi5/npoHmraI8c3BhbiBjbGFzcz0id3Bjb21fa2V5d29yZF9s
aW5rIj7mlK/ku5jlrp08L3NwYW4+44CB5b6u5L+h562J5aSW5Zu955S15a2Q5pSv5LuY5ZCR5L+E
572X5pav5Lq65o+Q5L6b5pyN5YqhPGJyIC8+CjLjgIHmkanmi5zmraPmjqXlj5flvrflm73nm5Hn
rqHmnLrmnoTosIPmn6XvvIzooqvmgIDnlpHov53lj43mrKfmtLLmlbDmja7ms5U8YnIgLz4KM+OA
geepuuWuouassuWcqOS4reWbveaOqOebtOWNh+acuueJiDxzcGFuIGNsYXNzPSJ3cGNvbV9rZXl3
b3JkX2xpbmsiPua7tOa7tDwvc3Bhbj7vvIzokL3lnLDmlrnmoYjku43lvoXmjqLorqg8YnIgLz4K
NOOAgeKAi+S8oOaJjuWFi+S8r+agvOmCgOivt+W+rui9r+aAu+ijgeWKoOebnyBGYWNlYm9vazxi
ciAvPgo144CB54m55pav5ouJQ0VP6ams5pav5YWL56ew5bCG5ZyoMjAxOeW5tOaOqOWHuuearuWN
oTxiciAvPgo244CBVWJlcumAieaLqeWkp+aRqeaLheS7u+aYjuW5tElQT+S4u+aJv+mUgOWVhu+8
jOS8sOWAvOi+vjEyMDDkur/nvo7lhYM8YnIgLz4KN+OAgUZhY2Vib29r5YaN5qyh6K+V5rC05pCc
57Si5bm/5ZGKPC9wPgo8aDE+44CQ6J6N6LWE5pS26LSt44CRPC9oMT4KPHA+MeOAgeS+m+W6lOmT
vuacjeWKoeWFrOWPuOKAnOa1t+ixmuS+m+W6lOmTvuKAneiOt+aVsOWNg+S4h+e+jumHkeiejei1
hDxiciAvPgoy44CB6Zu25ZSu5pyN5Yqh5ZWG4oCc6bKc55Sf5rS74oCd6I635paw5LiA6L2u5pWw
5Y2D5LiH576O5YWD5oqV6LWEPGJyIC8+CjPjgIHlkpbllaHmnLrlk4HniYzigJxpRHJpcOKAneWu
jOaIkOS6v+WFg+WPsOW4gVByZS1B6L2u6J6N6LWEPGJyIC8+CjTjgIHlnKjnur/prZTmlrnmlZnl
rablubPlj7DigJznlarojITprZTmlrnigJ3ojrfmlbDnmb7kuIfnvo7ph5HmipXotYQ8YnIgLz4K
NeOAgemHkeiejeacuuaehOWQiOinhOayn+mAmuWPiuWNj+WQjOW3peWFt+KAnOWHoeazsOaegeWu
ouKAneiOt+i/kTMwMDDkuIflhYNB6L2u6J6N6LWEPGJyIC8+CjbjgIHnpL7kuqTnlLXllYbigJzm
r4/ml6XkuIDmt5jigJ3lrozmiJAx5Lq/576O5YWDQui9ruiejei1hDxiciAvPgo344CB5oOF5oSf
PHNwYW4gY2xhc3M9IndwY29tX2tleXdvcmRfbGluayI+5Lq65bel5pm66IO9PC9zcGFuPuaKgOac
r+S8geS4muKAnOeruemXtOaZuuiDveKAneWujOaIkELova4zMDAw5LiH576O5YWD6J6N6LWEPGJy
IC8+CjjjgIHkvIHkuJrkuJrliqHlronlhajmnI3liqHllYbigJzkurrkurrkupHlm77igJ3ojrfl
vpcx5Lq/5Lq65rCR5biBUHJlLUHova7ono3otYQ8YnIgLz4KOeOAgeWMu+eWl+WZqOaisOWPiuiu
vuWkh+eahOS8geS4muKAnOWuiemSm+WFi+WMu+eWl+KAneiOt+W+l+aVsOWNg+S4h+S6uuawkeW4
gUHova7ono3otYQ8YnIgLz4KMTDjgIHliJvkuJrnu4/mtY7nlJ/mgIHpk77mnI3liqHllYbigJzl
j6/po57njKrigJ3ojrflvpfmlbDnmb7kuIfkurrmsJHluIHlpKnkvb/ova7ono3otYQ8L3A+Cjxw
PuWFs+azqOW+ruS/oeWFrOS8l+i0puWPt+KAnOazoemdouWwj+mVh+KAneabtOaXqeiOt+WPluaX
qeaKpeWGheWuue+8gTwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJlbnRyeS1jb3B5cmlnaHQiPjxwPuacrOaWh+ad
peiHquaKleeov++8jOS4jeS7o+ihqOazoemdouWwj+mVh+eri+Wcuu+8jOWmguiLpei9rOi9ve+8
jOivt+azqOaYjuWHuuWkhO+8mmh0dHA6Ly93d3cucG10b3duLmNvbS9hcmNoaXZlcy8xMzc0MjUu
aHRtbDwvcD48L2Rpdj4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAg
ICAgICAgICAgICAg
Traceback (most recent call last):
  File "schedDo.py", line 61, in <module>
    main()
  File "schedDo.py", line 28, in main
    scd.run()
  File "/root/anaconda3/lib/python3.6/sched.py", line 154, in run
    action(*argument, **kwargs)
  File "schedDo.py", line 43, in echo_test_msg
    circle_catch()
  File "schedDo.py", line 50, in circle_catch
    if getMorning.get_morning():
  File "/home/MorningNews/getMorning.py", line 45, in get_morning
    em.do_send()
  File "/home/MorningNews/sendEmail.py", line 41, in do_send
    message['From'] = formataddr(["小胡子Haso"])
  File "/root/anaconda3/lib/python3.6/email/utils.py", line 89, in formataddr
    name, address = pair
ValueError: not enough values to unpack (expected 2, got 1)
